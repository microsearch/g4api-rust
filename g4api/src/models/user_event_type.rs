/*
 * G4 API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

///
#[derive(
    Clone,
    Copy,
    Debug,
    Eq,
    PartialEq,
    Ord,
    PartialOrd,
    Hash,
    Serialize,
    Deserialize,
)]
pub enum UserEventType {
    #[serde(rename = "0")]
    _0,
    #[serde(rename = "1")]
    _1,
    #[serde(rename = "2")]
    _2,
    #[serde(rename = "3")]
    _3,
    #[serde(rename = "4")]
    _4,
    #[serde(rename = "5")]
    _5,
    #[serde(rename = "1000")]
    _1000,
    #[serde(rename = "1001")]
    _1001,
    #[serde(rename = "1002")]
    _1002,
    #[serde(rename = "1003")]
    _1003,
    #[serde(rename = "1004")]
    _1004,
    #[serde(rename = "1005")]
    _1005,
}

impl ToString for UserEventType {
    fn to_string(&self) -> String {
        match self {
            Self::_0 => String::from("0"),
            Self::_1 => String::from("1"),
            Self::_2 => String::from("2"),
            Self::_3 => String::from("3"),
            Self::_4 => String::from("4"),
            Self::_5 => String::from("5"),
            Self::_1000 => String::from("1000"),
            Self::_1001 => String::from("1001"),
            Self::_1002 => String::from("1002"),
            Self::_1003 => String::from("1003"),
            Self::_1004 => String::from("1004"),
            Self::_1005 => String::from("1005"),
        }
    }
}
