/*
 * G4 API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct RetrievedUserEvent {
    #[serde(rename = "userId")]
    pub user_id: i32,
    #[serde(rename = "activeUserId")]
    pub active_user_id: i32,
    #[serde(rename = "occurred")]
    pub occurred: String,
    #[serde(rename = "eventType")]
    pub event_type: crate::models::UserEventType,
    #[serde(rename = "host")]
    pub host: String,
    #[serde(rename = "appName")]
    pub app_name: Option<String>,
    #[serde(rename = "detail")]
    pub detail: Option<::std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "username")]
    pub username: String,
    #[serde(rename = "fullname")]
    pub fullname: String,
    #[serde(rename = "activeUsername")]
    pub active_username: String,
    #[serde(rename = "activeFullname")]
    pub active_fullname: String,
    #[serde(rename = "status")]
    pub status: crate::models::UserStatus,
}

impl RetrievedUserEvent {
    pub fn new(
        user_id: i32,
        active_user_id: i32,
        occurred: String,
        event_type: crate::models::UserEventType,
        host: String,
        app_name: Option<String>,
        detail: Option<::std::collections::HashMap<String, serde_json::Value>>,
        username: String,
        fullname: String,
        active_username: String,
        active_fullname: String,
        status: crate::models::UserStatus,
    ) -> RetrievedUserEvent {
        RetrievedUserEvent {
            user_id,
            active_user_id,
            occurred,
            event_type,
            host,
            app_name,
            detail,
            username,
            fullname,
            active_username,
            active_fullname,
            status,
        }
    }
}
