/*
 * G4 API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateUserRequest {
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::UserStatus>,
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    #[serde(rename = "fullname", skip_serializing_if = "Option::is_none")]
    pub fullname: Option<String>,
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "scope", skip_serializing_if = "Option::is_none")]
    pub scope: Option<String>,
    #[serde(rename = "roles", skip_serializing_if = "Option::is_none")]
    pub roles: Option<Vec<i32>>,
    #[serde(rename = "profiles", skip_serializing_if = "Option::is_none")]
    pub profiles: Option<Vec<i32>>,
    #[serde(rename = "collections", skip_serializing_if = "Option::is_none")]
    pub collections: Option<Vec<i32>>,
    #[serde(
        rename = "denyCollections",
        skip_serializing_if = "Option::is_none"
    )]
    pub deny_collections: Option<Vec<i32>>,
    #[serde(rename = "customFields", skip_serializing_if = "Option::is_none")]
    pub custom_fields:
        Option<::std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "password", skip_serializing_if = "Option::is_none")]
    pub password: Option<String>,
    #[serde(
        rename = "passwordCrypto",
        skip_serializing_if = "Option::is_none"
    )]
    pub password_crypto: Option<String>,
    #[serde(rename = "passwordSalt", skip_serializing_if = "Option::is_none")]
    pub password_salt: Option<String>,
    #[serde(rename = "passwordHash", skip_serializing_if = "Option::is_none")]
    pub password_hash: Option<String>,
    #[serde(rename = "appName", skip_serializing_if = "Option::is_none")]
    pub app_name: Option<String>,
    #[serde(rename = "appMetadata", skip_serializing_if = "Option::is_none")]
    pub app_metadata:
        Option<::std::collections::HashMap<String, serde_json::Value>>,
}

impl UpdateUserRequest {
    pub fn new() -> UpdateUserRequest {
        UpdateUserRequest {
            status: None,
            username: None,
            fullname: None,
            email: None,
            scope: None,
            roles: None,
            profiles: None,
            collections: None,
            deny_collections: None,
            custom_fields: None,
            password: None,
            password_crypto: None,
            password_salt: None,
            password_hash: None,
            app_name: None,
            app_metadata: None,
        }
    }
}
